services:
  web:
    image: ostis/sc-web:0.8.0-Fusion
    build:
      context: ./ostis-web-platform/sc-web
    restart: unless-stopped
    ports:
      - "8000:8000"
    networks:
      - sc-machine
    command:
      - "--server-host=machine"
    depends_on:
      machine:
        condition: service_healthy

  web-react:
     image: ostis/sc-web:0.8.1-Unlock
     build:
       context: ./sc-web
     restart: unless-stopped
     networks:
      - sc-machine
     command:
       - "--server-host=machine"
       - "--allowed_origins=http://localhost:3000" # <- add this line
     ports:
       - "8001:8000"

  machine:
    image: ostis/sc-machine:0.8.0-Fusion
    build:
      context: ./
    restart: unless-stopped
    volumes:
      - ./:/kb
      - kb-binary:/kb.bin
    networks:
      - sc-machine
    ports:
      - "8090:8090"
    healthcheck:
      test: "python3 /example-app/ostis-web-platform/sc-machine/scripts/healthcheck.py"
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 120s
    environment:
      # Use the commented env variable if you need to rebuild KB every startup.
      #- "REBUILD_KB=1"
      - "KB_PATH=/kb/repo.path"
      - "BINARY_PATH=/example-app/bin"
      - "CONFIG_PATH=/kb/ostis-example-app.ini"
    command:
      - "serve"

volumes:
  kb-binary: {}

networks:
  sc-machine: {}
