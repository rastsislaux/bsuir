package net.ostis.jesc.client.model.type;

import com.fasterxml.jackson.annotation.JsonValue;
import lombok.RequiredArgsConstructor;

import static net.ostis.jesc.client.model.type.ScTypeValues.*;

@RequiredArgsConstructor
public enum ScType {

    EDGE_U_COMMON(SC_TYPE_UEDGE_COMMON),
    EDGE_D_COMMON(SC_TYPE_DEDGE_COMMON),

    EDGE_U_COMMON_CONST(SC_TYPE_UEDGE_COMMON | SC_TYPE_CONST),
    EDGE_D_COMMON_CONST(SC_TYPE_DEDGE_COMMON | SC_TYPE_CONST),
    EDGE_U_COMMON_VAR(SC_TYPE_UEDGE_COMMON | SC_TYPE_VAR),
    EDGE_D_COMMON_VAR(SC_TYPE_DEDGE_COMMON | SC_TYPE_VAR),

    EDGE_ACCESS(SC_TYPE_EDGE_ACCESS),
    EDGE_ACCESS_CONST_POS_PERM(SC_TYPE_CONST | SC_TYPE_EDGE_ACCESS | SC_TYPE_EDGE_PERM | SC_TYPE_EDGE_POS),
    EDGE_ACCESS_CONST_NEG_PERM(SC_TYPE_CONST | SC_TYPE_EDGE_ACCESS | SC_TYPE_EDGE_PERM | SC_TYPE_EDGE_NEG),
    EDGE_ACCESS_CONST_FUZ_PERM(SC_TYPE_CONST | SC_TYPE_EDGE_ACCESS | SC_TYPE_EDGE_PERM | SC_TYPE_EDGE_FUZ),
    EDGE_ACCESS_CONST_POS_TEMP(SC_TYPE_CONST | SC_TYPE_EDGE_ACCESS | SC_TYPE_EDGE_TEMP | SC_TYPE_EDGE_POS),
    EDGE_ACCESS_CONST_NEG_TEMP(SC_TYPE_CONST | SC_TYPE_EDGE_ACCESS | SC_TYPE_EDGE_TEMP | SC_TYPE_EDGE_NEG),
    EDGE_ACCESS_CONST_FUZ_TEMP(SC_TYPE_CONST | SC_TYPE_EDGE_ACCESS | SC_TYPE_EDGE_TEMP | SC_TYPE_EDGE_FUZ),

    EDGE_ACCESS_VAR_POS_PERM(SC_TYPE_VAR | SC_TYPE_EDGE_ACCESS | SC_TYPE_EDGE_PERM | SC_TYPE_EDGE_POS),
    EDGE_ACCESS_VAR_NEG_PERM(SC_TYPE_VAR | SC_TYPE_EDGE_ACCESS | SC_TYPE_EDGE_PERM | SC_TYPE_EDGE_NEG),
    EDGE_ACCESS_VAR_FUZ_PERM(SC_TYPE_VAR | SC_TYPE_EDGE_ACCESS | SC_TYPE_EDGE_PERM | SC_TYPE_EDGE_FUZ),
    EDGE_ACCESS_VAR_POS_TEMP(SC_TYPE_VAR | SC_TYPE_EDGE_ACCESS | SC_TYPE_EDGE_TEMP | SC_TYPE_EDGE_POS),
    EDGE_ACCESS_VAR_NEG_TEMP(SC_TYPE_VAR | SC_TYPE_EDGE_ACCESS | SC_TYPE_EDGE_TEMP | SC_TYPE_EDGE_NEG),
    EDGE_ACCESS_VAR_FUZ_TEMP(SC_TYPE_VAR | SC_TYPE_EDGE_ACCESS | SC_TYPE_EDGE_TEMP | SC_TYPE_EDGE_FUZ),

    CONST(SC_TYPE_CONST),
    VAR(SC_TYPE_VAR),


    NODE(SC_TYPE_NODE),
    LINK(SC_TYPE_LINK),

    NODE_CONST(SC_TYPE_NODE | SC_TYPE_CONST),
    NODE_VAR(SC_TYPE_NODE | SC_TYPE_VAR),

    LINK_CONST(SC_TYPE_LINK | SC_TYPE_CONST),
    LINK_VAR(SC_TYPE_LINK | SC_TYPE_VAR),

    NODE_STRUCT(SC_TYPE_NODE | SC_TYPE_NODE_STRUCT),
    NODE_TUPLE(SC_TYPE_NODE | SC_TYPE_NODE_TUPLE),
    NODE_ROLE(SC_TYPE_NODE | SC_TYPE_NODE_ROLE),
    NODE_NOROLE(SC_TYPE_NODE | SC_TYPE_NODE_NOROLE),
    NODE_CLASS(SC_TYPE_NODE | SC_TYPE_NODE_CLASS),
    NODE_ABSTRACT(SC_TYPE_NODE | SC_TYPE_NODE_ABSTRACT),
    NODE_MATERIAL(SC_TYPE_NODE | SC_TYPE_NODE_MATERIAL),

    NODE_CONST_STRUCT(SC_TYPE_NODE | SC_TYPE_CONST | SC_TYPE_NODE_STRUCT),
    NODE_CONST_TUPLE(SC_TYPE_NODE | SC_TYPE_CONST | SC_TYPE_NODE_TUPLE),
    NODE_CONST_ROLE(SC_TYPE_NODE | SC_TYPE_CONST | SC_TYPE_NODE_ROLE),
    NODE_CONST_NOROLE(SC_TYPE_NODE | SC_TYPE_CONST | SC_TYPE_NODE_NOROLE),
    NODE_CONST_CLASS(SC_TYPE_NODE | SC_TYPE_CONST | SC_TYPE_NODE_CLASS),
    NODE_CONST_ABSTRACT(SC_TYPE_NODE | SC_TYPE_CONST | SC_TYPE_NODE_ABSTRACT),
    NODE_CONST_MATERIAL(SC_TYPE_NODE | SC_TYPE_CONST | SC_TYPE_NODE_MATERIAL),

    NODE_VAR_STRUCT(SC_TYPE_NODE | SC_TYPE_VAR | SC_TYPE_NODE_STRUCT),
    NODE_VAR_TUPLE(SC_TYPE_NODE | SC_TYPE_VAR | SC_TYPE_NODE_TUPLE),
    NODE_VAR_ROLE(SC_TYPE_NODE | SC_TYPE_VAR | SC_TYPE_NODE_ROLE),
    NODE_VAR_NOROLE(SC_TYPE_NODE | SC_TYPE_VAR | SC_TYPE_NODE_NOROLE),
    NODE_VAR_CLASS(SC_TYPE_NODE | SC_TYPE_VAR | SC_TYPE_NODE_CLASS),
    NODE_VAR_ABSTRACT(SC_TYPE_NODE | SC_TYPE_VAR | SC_TYPE_NODE_ABSTRACT),
    NODE_VAR_MATERIAL(SC_TYPE_NODE | SC_TYPE_VAR | SC_TYPE_NODE_MATERIAL);

    @JsonValue
    public final int numeric;

}
